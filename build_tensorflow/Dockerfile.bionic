FROM ubuntu:18.04

RUN dpkg --add-architecture armhf && dpkg --add-architecture arm64 \
    && apt-get update && apt-get install -y \
        software-properties-common automake autoconf libpng-dev \
        curl zip unzip libtool swig zlib1g-dev pkg-config git wget xz-utils \
        python-numpy python-pip python-mock \
        python3-numpy python3-pip python3-mock \
        libpython-dev libpython-all-dev libpython3-dev libpython3-all-dev \
        libpython-dev:armhf libpython-all-dev:armhf libpython3-dev:armhf libpython3-all-dev:armhf \
        libpython-dev:arm64 libpython-all-dev:arm64 libpython3-dev:arm64 libpython3-all-dev:arm64 \
        gcc g++

# NOTE: use Oracle Java instead of OpenJDK
RUN echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 select true" | debconf-set-selections
RUN add-apt-repository ppa:webupd8team/java && apt-get update \
        && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y oracle-java8-installer

# NOTE: limit bazel memory 
ENV BAZEL_JAVAC_OPTS=-J-Xms512m -J-Xmx1024m

RUN pip install -U --user keras_applications==1.0.5 --no-deps \
    && pip install -U --user keras_preprocessing==1.0.3 --no-deps \
    && pip3 install -U --user keras_applications==1.0.5 --no-deps \
    && pip3 install -U --user keras_preprocessing==1.0.3 --no-deps \
    && ldconfig

RUN /bin/bash -c "update-alternatives --install /usr/bin/python python /usr/bin/python2 100" \
    && /bin/bash -c "update-alternatives --install /usr/bin/python python /usr/bin/python3 150"

WORKDIR /root
RUN git clone https://github.com/mihailescu2m/tensorflow-on-arm/

WORKDIR /root/tensorflow-on-arm/build_tensorflow/
RUN git checkout v1.13.1-odroidxu4
CMD ["/bin/bash"]
